{"version":3,"sources":["components/Expresso/Expresso.module.css","components/Buttons/Buttons.module.css","components/Section/Section.module.css","components/Section/Section.jsx","components/Expresso/Expresso.jsx","components/Buttons/Buttons.jsx","components/Notification/Notification.jsx","App/App.js","index.js"],"names":["module","exports","Section","title","children","className","styles","section","Expresso","good","neutral","bad","total","positiveFeedback","item","defaultProps","Buttons","state","handleIncrement","buttonList","Object","keys","map","type","onClick","Notification","message","App","e","textButton","target","textContent","setState","prevState","countTotalFeedback","reduce","acc","value","countPositiveFeedbackPercentage","positive","Math","round","console","log","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yB,iBCAzBD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,KAAO,wB,oBCAlED,EAAOC,QAAU,CAAC,QAAU,2B,uLCebC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASC,UAAWC,IAAOC,QAA3B,UACE,6BAAKJ,IACJC,M,gBCFDI,EAAW,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC7C,OACE,8BACE,+BACE,oBAAIR,UAAWC,IAAOQ,KAAtB,SACE,sCAASL,OAEX,oBAAIJ,UAAWC,IAAOQ,KAAtB,SACE,yCAAYJ,OAEd,oBAAIL,UAAWC,IAAOQ,KAAtB,SACE,qCAAQH,OAEV,oBAAIN,UAAWC,IAAOQ,KAAtB,SACE,uCAAUF,SAEZ,oBAAIP,UAAWC,IAAOQ,KAAtB,SACE,mDAEGD,IAFH,eAWVL,EAASO,aAAe,CACtBF,iBAAkB,MAWLL,Q,gBCtBAQ,EApBC,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,gBAExB,OACE,oBAAIb,UAAWC,IAAOa,WAAtB,SACGC,OAAOC,KAAKJ,GAAOK,KAAI,SAAAR,GAAI,OAC1B,oBAAIT,UAAWC,IAAOQ,KAAtB,SACE,wBAAQS,KAAK,SAASC,QAASN,EAA/B,SACGJ,KAF4BA,SCJ1BW,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KC+EEC,G,kNAxEbV,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,gBAAkB,SAAAU,GAChB,IAAMC,EAAaD,EAAEE,OAAOC,YAG5B,EAAKC,UAAS,SAAAC,GAAS,sBACpBJ,EAAaI,EAAUJ,GAAc,O,EAQ1CK,mBAAqB,SAAAN,GAGnB,OAAOR,OAAOC,KAAK,EAAKJ,OAAOkB,QAC7B,SAACC,EAAKC,GAAN,OAAgBD,EAAM,EAAKnB,MAAMoB,KACjC,I,EAUJC,gCAAkC,WAChC,IAAMC,EAAWC,KAAKC,MACD,IAAlB,EAAKxB,MAAMR,KAAc,EAAKyB,sBAQjC,OANAQ,QAAQC,IAAIJ,GAMJA,GAAW,G,4CAGrB,WACE,MAA+BK,KAAK3B,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,eAAC,WAAD,WACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC,EAAD,CAASc,MAAO2B,KAAK3B,MAAOC,gBAAiB0B,KAAK1B,oBAEpD,cAAC,EAAD,CAASf,MAAM,aAAf,SACIyC,KAAKV,qBAGL,cAAC,EAAD,CACEzB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgC,KAAKV,mBACZrB,iBAAkB+B,KAAKN,kCAPzB,cAAC,EAAD,CAAcZ,QAAQ,+B,GA1DhBmB,cCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.be684aac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Expresso_item__1Hw_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonList\":\"Buttons_buttonList__3awVU\",\"item\":\"Buttons_item__1HG7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\nconst Section = ({ title, children }) => {\n  return (\n    <section className={styles.section}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//import Notification from '../Notification/Notification';\nimport styles from './Expresso.module.css';\n\nconst Expresso = ({ good, neutral, bad, total, positiveFeedback }) => {\n  return (\n    <div>\n      <ul>\n        <li className={styles.item}>\n          <p>Good:{good}</p>\n        </li>\n        <li className={styles.item}>\n          <p>Neutral:{neutral}</p>\n        </li>\n        <li className={styles.item}>\n          <p>Bad:{bad}</p>\n        </li>\n        <li className={styles.item}>\n          <p>Total:{total()}</p>\n        </li>\n        <li className={styles.item}>\n          <p>\n            Positive feedback:\n            {positiveFeedback()}%\n          </p>\n        </li>\n        {/* <Notification message={'No feedback given'}></Notification> */}\n      </ul>\n    </div>\n  );\n};\n\nExpresso.defaultProps = {\n  positiveFeedback: null,\n};\n\nExpresso.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.func.isRequired,\n  positiveFeedback: PropTypes.func.isRequired,\n};\n\nexport default Expresso;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Buttons.module.css';\nconst Buttons = ({ state, handleIncrement }) => {\n  // console.log(name);\n  return (\n    <ul className={styles.buttonList}>\n      {Object.keys(state).map(item => (\n        <li className={styles.item} key={item}>\n          <button type=\"button\" onClick={handleIncrement}>\n            {item}\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nButtons.propTypes = {\n  state: PropTypes.object.isRequired,\n  handleIncrement: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","const Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nexport default Notification;\n","import React, { Component, Fragment } from 'react';\nimport Section from '../components/Section';\nimport Expresso from '../components/Expresso';\nimport Buttons from '../components/Buttons';\nimport Notification from '../components/Notification';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = e => {\n    const textButton = e.target.textContent;\n    // console.log(textButton);\n\n    this.setState(prevState => ({\n      [textButton]: prevState[textButton] + 1,\n\n      // good: prevState.good + 1,\n      // neutral: prevState.neutral + 1,\n      // bad: prevState.bad + 1,\n    }));\n    // console.log([textButton]);\n  };\n  countTotalFeedback = e => {\n    // const target = e.target.value;\n    // console.log(target);\n    return Object.keys(this.state).reduce(\n      (acc, value) => acc + this.state[value],\n      0,\n    );\n    //   let sum = 0;\n    //   for (let value of Object.values(this.state)) {\n    //     sum += value;\n    //   }\n\n    //   return sum;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const positive = Math.round(\n      (this.state.good * 100) / this.countTotalFeedback(),\n    );\n    console.log(positive);\n    // if (!positive) {\n    //   return 0;\n    // } else {\n    //   return positive;\n    // }\n    return !positive ? 0 : positive;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <Fragment>\n        <Section title=\"PLEASE LEAVE FEEDBACK\">\n          <Buttons state={this.state} handleIncrement={this.handleIncrement} />\n        </Section>\n        <Section title=\"Statistics\">\n          {!this.countTotalFeedback() ? (\n            <Notification message=\"No feedback given\"></Notification>\n          ) : (\n            <Expresso\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback}\n              positiveFeedback={this.countPositiveFeedbackPercentage}\n            />\n          )}\n        </Section>\n      </Fragment>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}